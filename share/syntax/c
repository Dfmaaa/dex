syn begin c

syn addw keyword if else for while do continue switch case break default return goto asm
syn addw keyword const static inline register extern volatile auto restrict
syn addw keyword sizeof typedef
syn addw type struct union enum void char short int long float double signed unsigned
syn addw type size_t ssize_t off_t ptrdiff_t time_t va_list FILE DIR
syn addw notice FIXME TODO XXX
syn addr label '^[ \t]*[a-zA-Z_][a-zA-Z_0-9]*:'
syn addr -i oct '\<0[0-7]+(U|UL|ULL|LU|LLU)?\>'
syn addr -i dec '\<[0-9]+(U|UL|ULL|LU|LLU)?\>'
syn addr -i hex '\<0x[0-9a-f]+(U|UL|ULL|LU|LLU)?\>'
syn addr -i float '\<([0-9]+\.[0-9]*|[0-9]*\.[0-9]+)(e[+-]?[0-9]+)?[fl]?\>'
syn addr char \''[^\\]'\'
syn addr escchar "'(\\\\[1-3][0-7]{2}|\\\\0?[0-7]{2}|\\\\0{0,2}[0-7]|\\\\x[0-9a-fA-F]{1,2}|\\\\[tnr'\\\\])'"

# octal is always at most 3 digits and can have leading zeros
# maximum value is 377 (255)
syn addr escoct '\\([1-3][0-7]{2}|0?[0-7]{2}|0{0,2}[0-7])'
syn addr eschex '\\x[0-9a-fA-F]{1,2}'
syn addr esc '\\[tnr\\"]'

# 0 or more flags, optional width, optional precision, optional length
# f=[#0 +-]*
# w=([0-9]+|\*|\*[0-9]+\$)?
# p=(\.([0-9]+|\*|\*[0-9]+\$)?)?
# l=(hh|h|l|ll|L|q|j|z|t)?
# c=[diouxXeEfFgGaAcspn]
syn addr convdir '(%%|%[#0 +-]*([0-9]+|\*|\*[0-9]+\$)?(\.([0-9]+|\*|\*[0-9]+\$)?)?(hh|h|l|ll|L|q|j|z|t)?[diouxXeEfFgGaAcspn])'

syn addr multilinecomment '\\\n'

syn addw constant NULL
syn addw constant EPERM ENOENT ESRCH EINTR EIO ENXIO E2BIG ENOEXEC EBADF ECHILD
syn addw constant EAGAIN ENOMEM EACCES EFAULT ENOTBLK EBUSY EEXIST EXDEV ENODEV
syn addw constant ENOTDIR EISDIR EINVAL ENFILE EMFILE ENOTTY ETXTBSY EFBIG
syn addw constant ENOSPC ESPIPE EROFS EMLINK EPIPE EDOM ERANGE
syn addw constant stdin stdout stderr

syn addc string '"' '("|\n)'
syn addc cppcomment // '\n'
syn addc ccomment '/\*' '\*/'
syn addc if0 '^[ \t]*#if[ \t]+0[ \t]*$' '^[ \t]*#\<(elif|else|endif)\>'

syn addc preproc '^[ \t]*#' '\n'
syn addr preprocesc '\\\\'
syn addr preproccont '\\\n'
#syn addr preprockw '\s*\<(if|ifdef|ifndef|elif|else|endif|include|define|undef|pragma|error|warning|line)\>'
#syn after preproc.start preprockw

#syn addc preproc '^\s*#\s*(if|ifdef|ifndef|elif|else|endif|include|define|undef|pragma|error|warning|line)' '([^\\]$|^$)'

syn connect string convdir esc escoct eschex
syn connect cppcomment notice multilinecomment
syn connect ccomment notice
syn connect default keyword type float oct dec hex char escchar string if0 preproc
syn connect default ccomment cppcomment constant label
syn connect preproc ccomment cppcomment preprocesc preproccont

syn join numeric oct dec hex float
syn join special esc escchar escoct eschex convdir
syn join comment ccomment cppcomment if0
syn join error multilinecomment

syn end
