# common to <<"EOF" and <<'EOF'
syntax .sh-heredoc-common

state bol string
	heredocend match
	noeat string

state string
	char "\n" bol
	eat string

state match special
	char "\n" END
	# length clamped to bol
	recolor string 1000
	noeat string

# << EOF
syntax .sh-heredoc

state start code
	char " \t" start
	char "\n" bol
	eat END error

state bol string
	heredocend match
	noeat string

state string
	# FIXME: variables etc.
	char "\n" bol
	eat string

state match special
	char "\n" END
	# length clamped to bol
	recolor string 1000
	noeat string

# << "EOF"
syntax .sh-heredoc-dq

state start string
	char \" skipws string
	eat END error

state skipws code
	char " \t" skipws
	char "\n" .sh-heredoc-common:END
	eat END error

# << 'EOF'
syntax .sh-heredoc-sq

state start string
	char \' skipws string
	eat END error

state skipws code
	char " \t" skipws
	char "\n" .sh-heredoc-common:END
	eat END error

# commands can be at beginning of line or after any of && || ; & | { ` $(
# also beginning of line can contain ( after which command is allowed
syntax sh

state start code
	char -b a-zA-Z0-9_/.- command
	char "\t " start
	char "({" start special
	noeat args

state command code
	# eat all garbage to distinguish test/run.sh from builtin test
	char -b a-zA-Z0-9_/.- command
	inlist keyword1 start keyword
	inlist keyword2 args keyword
	inlist builtin args
	bufis for for
	noeat args

state for keyword
	char " \t" for
	char a-zA-Z_ forvar
	noeat forerror

state forvar ident
	char a-zA-Z_0-9 forvar
	char " \t" forspace
	noeat forerror

state forspace code
	char " \t" forspace
	str in in
	noeat forerror

state in keyword
	char " \t" args
	noeat forerror

state forerror code
	char a-zA-Z_0-9 args error
	noeat args

state args code
	char # comment
	char "'" sq
	char '"' dq
	char \\ esc
	# FIXME: after second ` should go to args
	char ` command special
	str "$((" args special
	str "$(" command special
	char \$ variable
	char "\n" start
	# && is same as two &, same for |. does not matter
	char ";&|" start special
	# this might be error
	char ()} args special
	char < lt
	eat args

state comment
	char "\n" start
	eat comment

state sq string
	char "'" args string
	eat sq

state dq string
	char '"' args string
	str '\\' dq special
	str '\"' dq special
	char \$ dqvariable
	eat dq

state dqvariable variable
	char '*@#?$!0-9-' dq variable
	char a-zA-Z_ dqvarname
	char '{' dqvarbrace
	noeat dq

state dqvarname variable
	char a-zA-Z_0-9 dqvarname
	noeat dq

state dqvarbrace variable
	char '*@#?$!0-9-' dqvarbraceend
	char a-zA-Z_ dqvarbracename
	noeat dq

state dqvarbracename variable
	char a-zA-Z_0-9 dqvarbracename
	noeat dqvarbraceend

state dqvarbraceend code
	char '}' dq variable
	noeat dq

state esc special
	eat args special

state variable
	char '*@#?$!0-9-' args variable
	char a-zA-Z_ varname
	char '{' varbrace
	noeat args

state varname variable
	char a-zA-Z_0-9 varname
	noeat args

state varbrace variable
	char '*@#?$!0-9-' varbraceend
	char a-zA-Z_ varbracename
	noeat args

state varbracename variable
	char a-zA-Z_0-9 varbracename
	noeat varbraceend

state varbraceend variable
	char '}' args variable
	noeat args

state lt special
	char < lt2
	noeat args

state lt2 special
	char < lt3
	char -- - heredoc-start special
	noeat heredoc-start

state lt3 special
	# cat <<<"string $var"
	# cat <<< $(echo $USER)
	noeat args

state heredoc-start special
	char " \t" heredoc-start
	char \" heredoc-dq
	char \' heredoc-sq
	char "\n" start error
	noeat heredoc

state heredoc-dq string
	char -bn "\"\n" heredoc-dq
	heredocbegin .sh-heredoc-dq start

state heredoc-sq string
	char -bn "\'\n" heredoc-sq
	heredocbegin .sh-heredoc-sq start

state heredoc special
	char -bn " \t\n" heredoc
	heredocbegin .sh-heredoc start

# command allowed after these
list keyword1 \
	do else elif exec if then until while

# command not allowed after these
list keyword2 \
	break case continue done esac exit export fi function in return shift

list builtin \
	alias bg bind cd caller command compgen complete test kill source \
	time declare typeset dirs disown echo enable eval fc fg getopts hash \
	help history jobs let local logout popd printf pushd pwd read \
	readonly shopt set trap type ulimit umask unalias unset wait "."
